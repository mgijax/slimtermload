#!/bin/sh

#
# Installation script
#

Usage=Install

cd `dirname $0`

COMMON_CONFIG=common.config
PROVIDER_CONFIGS="emapslimload.config goslimload.config mpslimload.config"


#
#  Function called when the install fails.
#
installFailed ()
{
    echo "Installation Failed: `date`"
    exit 1
}

#
#  Verify the arguments to the script, there shouldn't be any
#
if [ $# -ne 0 ]
then
    echo "Usage: ${Usage}"
    installFailed
fi

#
# Make sure all the configuration files exist.
#
for i in ${COMMON_CONFIG} ${PROVIDER_CONFIGS}
do
    if [ ! -r ${i} ]
    then
        echo "Missing configuration file: ${i}"
        installFailed
    fi
done

#
# Source the common configuration file.
#
. ${COMMON_CONFIG}

# Check to see if this is a development installation
#
DEV=""
if [ "${INSTALL_TYPE}" = "dev" ]
then
    DEV="-d"
fi

#
# run DLAInstall for each configuration file
#
for i in ${PROVIDER_CONFIGS}
do
    #
    # Source the provider configuration file.
    #
    . ${i}

    echo 'running DLAINSTALL'
    ${DLAINSTALL} ${DEV}

    #
    # Create the input directory.
    #
    if [ ! -d ${INPUTDIR} ]
    then
	mkdir -p ${INPUTDIR}
    fi


    #
    # If the input file does not exist already, create one that is writable. 
    # This is just a place holder until an input file is published. 
    # The input directory should be opened up to allow the curation staff 
    # to publish new input files.
    #
    if [ ! -f ${INPUT_FILE_DEFAULT} ]
    then
	touch ${INPUT_FILE_DEFAULT}
	chmod 664 ${INPUT_FILE_DEFAULT}
	chgrp mgi ${INPUT_FILE_DEFAULT}
    fi

    chmod -f 775 ${INPUTDIR}
    chgrp mgi ${INPUTDIR}
    chmod -f 775 ${OUTPUTDIR}
    chgrp mgi ${OUTPUTDIR}
    chmod -f 775 ${LOGDIR}
    chgrp mgi ${LOGDIR}

    chmod -f 755 ${LOAD_QC_SH}
done

# copy the scripts for curator use into a standard location which exists in
# their path statements

# trim any trailing slash from MGIBIN variable
DEPLOY_PATH=`echo "${MGIBIN}" | sed 's./$..'`

if [ "${DEPLOY_PATH}" = "" ]; then
        echo "Warning: MGIBIN variable missing from mgiconfig; cannot deploy curator files"
        exit 0
fi

if [ ! -d ${DEPLOY_PATH} ]; then
        # failure to deploy is not a fatal error; could happen during
        # development under a home directory
        echo "Warning: ${DEPLOY_PATH} does not exist; curator scripts were not copied."
        exit 0
fi

if [ -d ${DEPLOY_PATH} ]; then
        # copy files, change permissions, and check for errors
        # deployment errors are non-fatal, as they can occur regularly in an
        # SE's development area

        for file in runEmapSlimQC publishEmapSlim runGoSlimQC publishGoSlim runMpSlimQC publishMpSlim
        do
                cp bin/${file} ${DEPLOY_PATH}
                if [ $? -ne 0 ]; then
                        echo "Warning: Failed to copy ${file} to ${DEPLOY_PATH}"
                fi

                chmod 755 ${DEPLOY_PATH}/${file}
                if [ $? -ne 0 ]; then
                        echo "Warning: Failed to change permissions on ${DEPLOY_PATH}/${file}"
                fi
        done
        echo "Deployed curator files to ${DEPLOY_PATH}"
fi
exit 0
